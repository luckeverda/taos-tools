name: Alpine (3.0 alpine)

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  TOOLS_BUILD_TYPE: Release
  PR_NUMBER: ${{ github.event.number }}

jobs:
  check-changed:
    runs-on: ubuntu-latest
    outputs:
      changedflag: ${{ steps.changedflag.outputs.changedflag }}
    steps:
      - name: Step that prints name of pull request's base branch
        run: |
          echo "Pull request's base branch is: ${BASE_BRANCH}"
          echo "Pull request's branch is: ${GITHUB_REF##*/}"
          echo "Pull request's head ref is: ${GITHUB_HEAD_REF}"
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        if: github.event_name == 'pull_request'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v23.2

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v23.2
        with:
          files: |
            src/*
            inc/*
            deps/CMakeLists.txt
            .github/workflows/3.0-alpine.yml

      - name: Run step if any of the listed files above change
        id: changedflag
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files listed above has changed." > ~/changed.log
          echo "::set-output name=changedflag::true"

  build:
    runs-on: ubuntu-latest
    needs: check-changed

    steps:
      - name: Step that prints name of pull request's base branch
        run: |
          echo ${{needs.check-changed.outputs.changedflag}}
          echo "Pull request's base branch is: ${BASE_BRANCH}"
          echo "Pull request's branch is: ${GITHUB_REF##*/}"
          echo "Pull request's head ref is: ${GITHUB_HEAD_REF}"
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        if: github.event_name == 'pull_request'

      - name: setup Alpine
        if: |
          (needs.check-changed.outputs.changedflag == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
        uses: jirutka/setup-alpine@v1


      - name: Run script inside Alpine chroot as root
        if: |
          (needs.check-changed.outputs.changedflag == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
        run: |
          cat /etc/alpine-release
          apk add argp-standalone bash curl cmake gcc make g++ git go procps lsof valgrind linux-headers libunwind libunwind-dev tzdata wget jansson-dev snappy-dev xz-dev zlib-dev
        shell: alpine.sh --root {0}

      - name: Build & Install TDengine
        if: |
          (needs.check-changed.outputs.changedflag == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
        shell: alpine.sh --root {0}
        run: |
          git clone --branch fix/sangshuduo/TD-18804-alpine-taostools --depth 1 https://github.com/taosdata/TDengine > /dev/null || exit 1
          cd TDengine && mkdir debug && cd debug && cmake .. -DBUILD_TOOLS=true -DTOOLS_BUILD_TYPE=${{env.TOOLS_BUILD_TYPE}} -DBUILD_HTTP=false && make -j8 && make install
          if [[ ! -f /usr/local/taos/bin/taosd ]] || [[ ! -f /usr/local/taos/bin/taos ]]
          then
            echo "TDengien build failure"
            exit 1
          fi

          if [[ ! -f /usr/local/taos/bin/taosdump ]] || [[ ! -f /usr/local/taos/bin/taosBenchmark ]]
          then
            echo "taos-tools build failure"
            exit 1
          fi

